import pandas as pd
movies = pd.read_csv('movies.csv')

movies

from sklearn.feature_extraction.text import TfidfVectorizer
tfidf = TfidfVectorizer(stop_words='english')
movies['overview'] = movies['overview'].fillna('')

tfidf_matrix = tfidf.fit_transform(movies['overview'])

pd.DataFrame(tfidf_matrix.toarray(), columns=tfidf.get_feature_names())

from sklearn.metrics.pairwise import linear_kernel
similarity_matrix = linear_kernel(tfidf_matrix, tfidf_matrix)

similarity_matrix

movie_title = "John Carter"

idx = movies.loc[movies["title"] == movie_title].index[0]
idx

scores = list(enumerate(similarity_matrix[idx]))
scores

scores = sorted(scores, key=lambda x: x[1], reverse=True)
scores

movie_indices = [tpl[0] for tpl in scores[1:4]]
movie_indices

list(movies["title"].iloc[movie_indices])

def similar_movies(movie_title, nr_movies):
    idx = movies.loc[movies["title"] == movie_title].index[0]
    scores = list(enumerate(similarity_matrix[idx]))
    scores = sorted(scores, key=lambda x: x[1], reverse=True)
    movie_indices = [tpl[0] for tpl in scores[1:nr_movies+1]]
    similar_titels = list(movies["title"].iloc[movie_indices])
    return similar_titels


similar_movies("Kung Fu Panda 3", 3)
